<UserControl
    x:Class="Reloaded.Mod.Launcher.Controls.Mods.ModItem"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:Reloaded.Mod.Launcher.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
    xmlns:local="clr-namespace:Reloaded.Mod.Launcher.Controls.Mods"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:up="clr-namespace:Reloaded.Mod.Launcher.Lib.Remix.Updates;assembly=Reloaded.Mod.Launcher.Lib"
    x:Name="ModItemControl"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">
    <UserControl.Resources>
        <converters:StringNullOrEmptyConverter x:Key="IsNullOrEmpty" />
    </UserControl.Resources>
    <Grid>
        <Grid.Style>
            <Style TargetType="Grid">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsHidden}" Value="True">
                        <Setter Property="Opacity" Value="0.75" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Style>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="auto" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <!--  Checkbox  -->
        <CheckBox
            Grid.RowSpan="2"
            Height="{DynamicResource ListEntryCheckboxHeightSmall}"
            Margin="4,0,8,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Focusable="False"
            IsChecked="{Binding Enabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            IsEnabled="{Binding IsEditable}"
            IsThreeState="False">
            <CheckBox.Style>
                <Style BasedOn="{StaticResource DefaultCheckBox}" TargetType="CheckBox">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Tuple.Config.IsSeparator}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </CheckBox.Style>
        </CheckBox>

        <Separator
            Width="16"
            Margin="0,0,4,0"
            Background="{DynamicResource ThemeBrushDarker}">
            <Separator.Style>
                <Style TargetType="Separator">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Tuple.Config.IsSeparator}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Separator.Style>
        </Separator>

        <!--  Top Half  -->
        <DockPanel Grid.Column="1">
            <TextBlock
                Margin="0,0,4,0"
                FontFamily="{DynamicResource FontBold}"
                FontSize="14"
                Text="{Binding Tuple.Config.ModDisplayName, UpdateSourceTrigger=PropertyChanged}"
                TextTrimming="CharacterEllipsis"
                ToolTip="{Binding Tuple.Config.ModDisplayName, UpdateSourceTrigger=PropertyChanged}" />

            <Separator>
                <Separator.Style>
                    <Style TargetType="Separator">
                        <Setter Property="Opacity" Value="0.15" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Tuple.Config.IsSeparator}" Value="True">
                                <Setter Property="Opacity" Value="1" />
                                <Setter Property="Background" Value="{DynamicResource ThemeBrushDarker}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Separator.Style>
            </Separator>
        </DockPanel>

        <StackPanel Grid.Column="3" Orientation="Horizontal">
            <StackPanel.Resources>
                <Style x:Key="StatusIcon" TargetType="{x:Type fa:IconBlock}">
                    <Setter Property="Width" Value="16" />
                    <Setter Property="Height" Value="16" />
                    <Setter Property="Margin" Value="8,0,0,0" />
                    <Setter Property="Opacity" Value="0.25" />
                    <Setter Property="Foreground" Value="{DynamicResource ThemeBrush}" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource ThemeBrushLighter}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Resources>
            <StackPanel.Style>
                <Style TargetType="StackPanel">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Tuple.Config.IsSeparator}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>

            <TextBlock
                Margin="4,0,0,0"
                FontFamily="{DynamicResource FontLight}"
                FontSize="14"
                Text="{Binding Tuple.Config.ModAuthor, UpdateSourceTrigger=PropertyChanged}"
                TextTrimming="CharacterEllipsis"
                ToolTip="{Binding Tuple.Config.ModAuthor, UpdateSourceTrigger=PropertyChanged}">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Orientation, ElementName=ModItemControl}" Value="{x:Static Orientation.Horizontal}">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsCompact, ElementName=ModItemControl}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <fa:IconBlock
                x:Name="IconSupport"
                Icon="Heart"
                IconFont="Solid">
                <fa:IconBlock.Style>
                    <Style BasedOn="{StaticResource StatusIcon}" TargetType="{x:Type fa:IconBlock}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Tuple.Config.CreatorUrl, Converter={StaticResource IsNullOrEmpty}}" Value="False">
                                <Setter Property="Opacity" Value="1" />
                                <Setter Property="ToolTip" Value="Support the creator!" />
                                <Setter Property="Cursor" Value="Hand" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </fa:IconBlock.Style>
            </fa:IconBlock>

            <fa:IconBlock x:Name="IconConfig" Icon="Gear">
                <fa:IconBlock.Style>
                    <Style BasedOn="{StaticResource StatusIcon}" TargetType="{x:Type fa:IconBlock}">
                        <Setter Property="ToolTip" Value="No config available." />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Status.IsConfigurable}" Value="True">
                                <Setter Property="Opacity" Value="1" />
                                <Setter Property="ToolTip" Value="{DynamicResource ModManagerContextConfigure}" />
                                <Setter Property="Cursor" Value="Hand" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </fa:IconBlock.Style>
            </fa:IconBlock>

            <fa:IconBlock x:Name="IconUpdate">
                <fa:IconBlock.Style>
                    <Style BasedOn="{StaticResource StatusIcon}" TargetType="{x:Type fa:IconBlock}">
                        <Setter Property="Icon" Value="Check" />
                        <Setter Property="ToolTip" Value="Updates not supported." />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Status.Updates}" Value="{x:Static up:UpdateStatus.Supported}">
                                <Setter Property="Opacity" Value="1" />
                                <Setter Property="ToolTip" Value="Check for updates?" />
                                <Setter Property="Cursor" Value="Hand" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Status.Updates}" Value="{x:Static up:UpdateStatus.Checking}">
                                <Setter Property="Opacity" Value="1" />
                                <Setter Property="Icon" Value="Rotate" />
                                <Setter Property="ToolTip" Value="Checking for updates..." />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Status.Updates}" Value="{x:Static up:UpdateStatus.Pending}">
                                <Setter Property="Foreground" Value="{DynamicResource AccentColorHighlightBrush}" />
                                <Setter Property="Icon" Value="Download" />
                                <Setter Property="Opacity" Value="1" />
                                <Setter Property="Effect">
                                    <Setter.Value>
                                        <DropShadowEffect
                                            BlurRadius="8"
                                            Opacity="0.75"
                                            RenderingBias="Performance"
                                            ShadowDepth="0"
                                            Color="{DynamicResource AccentColorHighlight}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="ToolTip" Value="Download new update!" />
                                <Setter Property="Cursor" Value="Hand" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </fa:IconBlock.Style>
            </fa:IconBlock>
        </StackPanel>

        <!--  Bottom Half  -->
        <StackPanel
            Grid.Row="1"
            Grid.Column="1"
            Grid.ColumnSpan="3"
            Opacity="0.9"
            Orientation="Horizontal">
            <StackPanel.Style>
                <Style TargetType="{x:Type StackPanel}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsCompact, RelativeSource={RelativeSource AncestorType=UserControl}}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Tuple.Config.IsSeparator}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StackPanel.Style>

            <TextBlock
                Grid.Column="1"
                FontSize="12"
                Text="{Binding Tuple.Config.ModVersion, UpdateSourceTrigger=PropertyChanged}">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Status.Updates}" Value="{x:Static up:UpdateStatus.Pending}">
                                <Setter Property="Foreground" Value="{DynamicResource AccentColorHighlightBrush}" />
                                <Setter Property="FontFamily" Value="{DynamicResource FontBold}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <TextBlock
                Grid.Column="1"
                Margin="8,0"
                FontSize="12"
                Text="|" />

            <TextBlock FontSize="12" Text="{Binding Tuple.Config.ModAuthor, UpdateSourceTrigger=PropertyChanged}" />
        </StackPanel>
    </Grid>
</UserControl>
