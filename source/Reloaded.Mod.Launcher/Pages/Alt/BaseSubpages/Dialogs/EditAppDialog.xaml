<rxui:ReactiveWindow
    x:Class="Reloaded.Mod.Launcher.Pages.Alt.BaseSubpages.Dialogs.EditAppDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:Reloaded.Mod.Launcher.Controls"
    xmlns:converters="clr-namespace:Reloaded.Mod.Launcher.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:local="clr-namespace:Reloaded.Mod.Launcher.Pages.Alt.BaseSubpages.Dialogs"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:rxui="http://reactiveui.net"
    xmlns:vm="clr-namespace:Reloaded.Mod.Launcher.Lib.Remix.ViewModels;assembly=Reloaded.Mod.Launcher.Lib"
    Title="Application Settings"
    Width="800"
    Height="480"
    MinWidth="760"
    MinHeight="440"
    d:Background="{StaticResource ControlFillBrush}"
    d:DesignHeight="480"
    d:DesignWidth="800"
    x:TypeArguments="vm:EditAppViewModel"
    Style="{StaticResource ReloadedReactiveWindow}"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <Grid x:Name="Grid" Margin="8">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <StackPanel>
            <TextBlock
                d:Text="Example App"
                FontFamily="{DynamicResource FontBold}"
                FontSize="24"
                Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <Separator />
        </StackPanel>
        <TabControl
            Grid.Row="1"
            BorderThickness="2,0,0,0"
            TabStripPlacement="Left">
            <TabItem Header="Details">
                <TabItem.Resources>
                    <Style BasedOn="{StaticResource TextBoxBaseStyle}" TargetType="{x:Type TextBox}">
                        <Setter Property="Margin" Value="0,0,0,8" />
                    </Style>
                </TabItem.Resources>
                <Grid Margin="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="2*" />
                    </Grid.ColumnDefinitions>

                    <!--  Icon  -->
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Border
                            Width="{Binding ActualHeight, RelativeSource={RelativeSource self}}"
                            Margin="0,0,0,4"
                            Background="{DynamicResource BorderColorDarkBrush}"
                            BorderBrush="{DynamicResource BorderColorBrush}"
                            BorderThickness="1">
                            <Image Stretch="Uniform" Style="{DynamicResource HighQualityImage}">
                                <Image.Source>
                                    <MultiBinding Converter="{x:Static converters:ApplicationPathTupleToImageConverter.Instance}" UpdateSourceTrigger="PropertyChanged">
                                        <Binding IsAsync="True" Path="AppTuple" />
                                        <Binding IsAsync="True" />
                                    </MultiBinding>
                                </Image.Source>
                            </Image>
                        </Border>

                        <Grid Grid.Row="1">
                            <StackPanel>
                                <TextBlock
                                    Margin="0,4"
                                    Style="{DynamicResource FormTextBlockHeader}"
                                    Text="Actions" />
                                <Button
                                    Margin="0,2"
                                    Command="{Binding MakeShortcutCommand}"
                                    Content="{DynamicResource AddAppCreateShortcut}" />
                                <Button Margin="0,2" Command="{Binding OpenAppFolderCommand}">
                                    Open App Folder
                                </Button>
                            </StackPanel>
                        </Grid>
                    </Grid>

                    <StackPanel
                        Grid.RowSpan="2"
                        Grid.Column="1"
                        Margin="8,0">
                        <TextBlock Style="{DynamicResource FormTextBlockHeader}" Text="Name" />
                        <TextBox Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock Style="{DynamicResource FormTextBlockHeader}" Text="Application EXE" />
                        <DockPanel Margin="0,0,0,8">
                            <Button
                                Padding="0"
                                Command="{Binding SelectAppCommand}"
                                DockPanel.Dock="Right"
                                ToolTip="Select Application...">
                                <fa:IconBlock Icon="File" IconFont="Solid" />
                            </Button>
                            <TextBox
                                x:Name="AppPath_TextBox"
                                Margin="0,0,4,0"
                                DockPanel.Dock="Left"
                                IsReadOnly="True"
                                Text="{Binding AppPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DockPanel>
                        <TextBlock Style="{DynamicResource FormTextBlockHeader}" Text="Command-line Args" />
                        <TextBox Text="{Binding AppArgs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock Style="{DynamicResource FormTextBlockHeader}" Text="Working Directory" />
                        <DockPanel Margin="0,0,0,8">
                            <Button
                                Padding="0"
                                Command="{Binding SelectWorkingDirCommand}"
                                DockPanel.Dock="Right"
                                ToolTip="Select Working Directory...">
                                <fa:IconBlock Icon="Folder" IconFont="Solid" />
                            </Button>
                            <TextBox
                                x:Name="WorkingDir_TextBox"
                                Margin="0,0,4,0"
                                DockPanel.Dock="Left"
                                IsReadOnly="True"
                                Text="{Binding WorkingDir, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </DockPanel>
                    </StackPanel>
                </Grid>
            </TabItem>

            <TabItem Header="Reloaded">
                <StackPanel
                    Grid.RowSpan="2"
                    Grid.Column="1"
                    Margin="8,0">
                    <TextBlock
                        Margin="0"
                        FontFamily="{DynamicResource FontBold}"
                        FontSize="{DynamicResource TextSizeLarge}"
                        Text="Reloaded Mode" />
                    <TextBlock Margin="0,4" TextWrapping="Wrap">
                        Set how and when Reloaded gets added to an application.
                    </TextBlock>
                    <ComboBox ItemsSource="{Binding Modes}" SelectedItem="{Binding ReloadedMode}" />
                    <TextBlock
                        Margin="0,8"
                        FontSize="{DynamicResource TextSizeSmall}"
                        TextWrapping="Wrap">

                        <Run FontFamily="{DynamicResource FontBold}" Text="Disabled:" />
                        Reloaded will not be added.<LineBreak />

                        <Run FontFamily="{DynamicResource FontBold}" Text="Default:" />
                        When the app is launched through Reloaded or a Reloaded shortcut.<LineBreak />

                        <Run FontFamily="{DynamicResource FontBold}" Text="External:" />
                        Whenever the app is launched, using an external method to add Reloaded.<LineBreak />

                        <Run FontFamily="{DynamicResource FontBold}" Text="AutoInject:" />
                        Whenever the app is detected to be running. (NOT RECOMMENDED)</TextBlock>
                </StackPanel>
            </TabItem>

            <TabItem Header="Downloads">
                <ItemsControl Margin="4" ItemsSource="{Binding PackageProviders}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <CheckBox
                                    Content="{Binding Factory.FriendlyName, Mode=OneTime}"
                                    IsChecked="{Binding IsEnabled}"
                                    Style="{DynamicResource DefaultCheckBox}" />

                                <controls:PropertyGridEx
                                    FlattenChildProperties="ParentNameAsCategory"
                                    SelectedObject="{Binding Configuration}"
                                    ShowSearchBar="False"
                                    ShowSortButton="False">
                                    <controls:PropertyGridEx.Style>
                                        <Style BasedOn="{StaticResource PropertyGridBaseStyle}" TargetType="{x:Type controls:PropertyGridEx}">
                                            <Setter Property="Opacity" Value="0.25" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsEnabled}" Value="True">
                                                    <Setter Property="Opacity" Value="1" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </controls:PropertyGridEx.Style>
                                </controls:PropertyGridEx>
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </TabItem>
        </TabControl>

        <DockPanel Grid.Row="2">
            <Button Margin="0,0,4,0" Command="{Binding DeleteAppCommand}">
                <fa:IconBlock Icon="Trash" ToolTip="{DynamicResource AddAppDeleteButton}" />
            </Button>
            <Button
                Command="{Binding Source={x:Static controls:WindowCommands.CloseWindowCommand}}"
                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=Window}}"
                Content="Close"
                DockPanel.Dock="Right" />
        </DockPanel>
    </Grid>
</rxui:ReactiveWindow>
