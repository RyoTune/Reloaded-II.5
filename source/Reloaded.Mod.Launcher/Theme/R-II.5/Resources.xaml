<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:hc="https://handyorg.github.io/handycontrol"
    xmlns:re="clr-namespace:Reloaded.WPF.Theme.Default;assembly=Reloaded.WPF.Theme.Default"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">


    <Style x:Key="FormTextBlockHeader" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="0,0,0,4" />
        <Setter Property="FontFamily" Value="{DynamicResource FontBold}" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <!--  Glow  -->
    <Color x:Key="AccentColorHighlight">#FF9999</Color>
    <SolidColorBrush x:Key="AccentColorHighlightBrush" Color="{DynamicResource AccentColorHighlight}" />

    <Color x:Key="AccentColorGlow">#FF0000</Color>
    <SolidColorBrush x:Key="AccentColorGlowBrush" Color="{DynamicResource AccentColorHighlight}" />

    <!--  Fix Scrollbar  -->
    <sys:Double x:Key="ScrollbarWidth">16</sys:Double>
    <GridLength x:Key="ScrollbarBarMargin">0</GridLength>
    <sys:Double x:Key="ScrollbarRadius">0</sys:Double>

    <Style
        x:Key="DefaultButton"
        BasedOn="{StaticResource DefaultButton}"
        TargetType="{x:Type Button}">
        <Setter Property="Height" Value="32" />
        <Setter Property="Padding" Value="8,0" />
    </Style>

    <Style BasedOn="{StaticResource DefaultButton}" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="32" />
        <Setter Property="Padding" Value="8,0" />
    </Style>

    <Style
        x:Key="DefaultCheckBox"
        BasedOn="{StaticResource DefaultCheckBox}"
        TargetType="{x:Type CheckBox}">
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style
        x:Key="ReloadedWindow"
        BasedOn="{StaticResource ReloadedWindow}"
        TargetType="{x:Type re:ReloadedWindow}">
        <Setter Property="Foreground" Value="{DynamicResource TextColorBrush}" />
    </Style>

    <sys:Double x:Key="TooltipBackgroundOpacity">1</sys:Double>

    <!--  *********************************************************  -->
    <!--  Window Glow/Shadow  -->
    <Color x:Key="GlowColorInactive">#000</Color>
    <Color x:Key="GlowColorDefault">#000</Color>
    <Color x:Key="GlowColorEngaged">#000</Color>
    <sys:Double x:Key="GlowOpacity">1</sys:Double>
    <sys:Double x:Key="GlowDirection">315</sys:Double>
    <sys:Double x:Key="GlowDepth">0</sys:Double>

    <!--  *********************************************************  -->
    <!--  Control Colors  -->

    <!--  Fix TextBox border disappearing on mouse hover.  -->
    <SolidColorBrush x:Key="SecondaryBorderBrush" Color="{DynamicResource BorderColorLight}" />

    <!--  Reloaded doesn't have the colors for "regions"; always use background color.  -->
    <SolidColorBrush x:Key="RegionBrush" Color="{DynamicResource BackgroundColor}" />

    <!--  *********************************************************  -->
    <!--  TextBox  -->
    <Style
        x:Key="TextBoxBaseStyle"
        BasedOn="{StaticResource TextBoxBaseStyle}"
        TargetType="{x:Type TextBox}">
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="hc:BorderElement.CornerRadius" Value="0" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    </Style>

    <Style
        x:Key="DefaultTextBox"
        BasedOn="{StaticResource TextBoxBaseStyle}"
        TargetType="{x:Type TextBox}" />

    <Style BasedOn="{StaticResource TextBoxBaseStyle}" TargetType="{x:Type TextBox}" />

    <!--  *********************************************************  -->
    <!--  ListView  -->

    <!--
        For use in fixing binding errors from the use of WrapPanel as ItemsPanelTemplate, such as ModsList.
        Solution: https://stackoverflow.com/a/23455790
    -->
    <Style x:Key="DefaultListViewItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="Padding" Value="{DynamicResource ListViewItemPadding}" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource ReloadedFocusVisual}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Grid>
                        <!--  Margin of 1 prevents listbox item from overlapping with border.  -->
                        <Rectangle Margin="1" Fill="{TemplateBinding Background}" />
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource BackgroundFadeBackgroundToBorderDark}" />
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource BackgroundFadeBorderDarkToBackground}" />
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>